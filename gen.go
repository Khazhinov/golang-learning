package main

import (
	"fmt"
	"golang-learning/internal/foundation/cmd"
	"golang-learning/internal/foundation/configurator"
	"os"
	"text/template"
	"time"
)

//go:generate go run gen.go

func main() {
	defaultValues := configurator.GetDefaultValues()

	generatedFile, err := os.Create("config/defaults-gen.go")
	cmd.CheckError(err)
	defer generatedFile.Close()

	fileData := ""
	for i, v := range defaultValues {
		if i > 0 {
			fileData += fmt.Sprintf(", ")
		}
		fileData += fmt.Sprintf("%d", v)
	}

	packageTemplate.Execute(generatedFile, struct {
		Timestamp         time.Time
		DefaultValuesData string
	}{
		Timestamp:         time.Now(),
		DefaultValuesData: fileData,
	})
}

var packageTemplate = template.Must(template.New("").Parse(`// Code generated by go generate; DO NOT EDIT.
// This file was generated by robots at
// {{ .Timestamp }}
package config

var DefaultValues = []byte{ {{ .DefaultValuesData }} }
`))
